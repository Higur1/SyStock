// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Company {
  id                 Int    @id @default(autoincrement())
  name               String @unique
  cnpj               String @unique
  email              String @unique
  state_registration String

  Company_Phones    Company_Phone[]
  Company_Suppliers Supplier[]
  Company_Address   Company_Address[]

  @@map("company")
}

model Company_Address {
  id         Int    @id @default(autoincrement())
  company_id Int    @unique
  cep        String
  city       String
  state      String
  street     String
  number     Int
  complement String

  company_id_fk Company @relation(fields: [company_id], references: [id])

  @@map("company_address")
}

model Company_Phone {
  id         Int    @id @default(autoincrement())
  phone      String @unique
  company_id Int

  company_cnpj_phone_fk Company @relation(fields: [company_id], references: [id])

  @@map("company_phone")
}

model Supplier {
  id         Int    @id @default(autoincrement())
  name       String @unique
  email      String @unique
  company_id Int

  Phones SupplierPhone[]
  Batchs Batch[]

  company_id_fk Company @relation(fields: [company_id], references: [id])

  @@map("suppliers")
}

model SupplierPhone {
  id          Int    @id @default(autoincrement())
  phone       String @unique
  supplier_id Int

  supplier_phone_id_fk Supplier @relation(fields: [supplier_id], references: [id])

  @@map("supplier_phone")
}

model Batch {
  id            Int             @id @default(autoincrement())
  number        String          @unique
  date          DateTime        @default(now())
  supplier_id   Int
  Batch_Product Batch_Product[]

  supplier_id_fk Supplier @relation(fields: [supplier_id], references: [id])

  @@map("batch")
}

model Batch_Product {
  batch_id   Int
  product_id Int
  quantity   Int

  product_id_fk   Product @relation(fields: [product_id], references: [id])
  number_batch_fk Batch   @relation(fields: [batch_id], references: [id])

  @@id([batch_id, product_id])
  @@map("batch_product")
}

model Product {
  id          Int     @id @default(autoincrement())
  description String
  ncmSh       String
  price       Decimal
  category_id Int

  Batch_Product Batch_Product[]

  id_category_fk Category @relation(fields: [category_id], references: [id])

  @@map("products")
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]

  @@map("categories")
}

model User_Types {
  id   Int    @id @default(autoincrement())
  name String
  User User[]

  @@map("user_types")
}

model User {
  id            Int    @id @default(autoincrement())
  name          String
  user_login    String @unique
  user_password String
  email         String @unique
  user_type_id  Int
  tokenRecovery TokenRecovery[]

  user_type_id_fk User_Types @relation(fields: [user_type_id], references: [id])

  @@map("users")
}
model TokenRecovery {
  id Int @id @default(autoincrement())
  value String @default(uuid())
  tokenStatus Boolean @default(true) 
  user_id Int

  user_id_fk User @relation(fields: [user_id], references: [id])

  @@map("token_recovery")
}
